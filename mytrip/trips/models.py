# Original - Shuting Chen 
from django.db import models

class Trip(models.Model):
    '''
    This is the model created for testing data; We use this to create 
    a table called 'trip' in db.sqlite3
    '''
    attraction = models.CharField(max_length=100, blank=True, null=True)
    address = models.CharField(max_length=200, blank=True, null=True)
    rating = models.FloatField(blank=True, null=True)  
    types = models.CharField(max_length=200, blank=True, null=True)
    place_id = models.CharField(max_length=50, blank=True, null=True)
    lat = models.FloatField(blank=True, null=True)  
    lng = models.FloatField(blank=True, null=True)  
    reviews = models.CharField(max_length=100, blank=True, null=True)
    reviews_count = models.IntegerField(blank=True, null=True)
    
    class Meta:
        db_table = 'trip'

class Url(models.Model):
    '''
    This is the model used to create a table called 'url' in db.sqlite3; 
    This table contains attractions and their links to Tripadvisor; Data 
    were imported from 'url_data.csv'
    '''
    attraction = models.CharField(max_length=100, blank=True, null=True)
    url = models.CharField(max_length=500, blank=True, null=True)
    
    class Meta:
        db_table = 'url'

class Trip1(models.Model):
    '''
    This is the model created for real data; we use this to create a table
    called 'trip1' in db.sqlite3 and import data from 'final_data1.csv'
    '''
    attraction = models.CharField(max_length=100, blank=True, null=True)
    address = models.CharField(max_length=200, blank=True, null=True)
    rating = models.FloatField(blank=True, null=True)  
    types = models.CharField(max_length=200, blank=True, null=True)
    place_id = models.CharField(max_length=50, blank=True, null=True)
    lat = models.FloatField(blank=True, null=True)  
    lng = models.FloatField(blank=True, null=True)  
    reviews = models.CharField(max_length=100, blank=True, null=True)
    reviews_count = models.IntegerField(blank=True, null=True)
    
    class Meta:
        db_table = 'trip1'

class Reviews(models.Model):
    '''
    This is the model created for attractions and their categories generated
    by NLP. We use this to create table called 'reviews' in db.sqlite3 
    and import data from 'reviews2.csv'
    '''
    attraction = models.CharField(max_length=100, blank=True, null=True)
    categories = models.CharField(max_length=500, blank=True, null=True)
    tags = models.CharField(max_length=1000, blank=True, null=True)  

    class Meta:
        db_table = 'reviews'

class Tag(models.Model):
    '''
    This is the model created for attractions and their top five popular phrases 
    generated by NLP. We use this to create table called 'tag' in db.sqlite3 
    and import data from 'attr_match_phrs_5.csv'
    '''
    attraction = models.CharField(max_length=100, blank=True, null=True)
    keywords = models.CharField(max_length=200, blank=True, null=True)
    
    class Meta:
        db_table = 'tag'

############################## Some illustrations ####################################
# 1.If we add a new model, each time we need to run following codes to create 
# a new table in db.sqlite3:
# $ python3 manage.py makemigrations trips
# $ python3 manage.py sqlmigrate trips 0001 (could be 0002, 0003 etc.)
# $ python3 manage.py migrate
#
# 2. IMPORT DATA INTO THE NEW TABLE: 
# To import data from csv file to a specific table in db.sqlite3, I first 
# run code 'python3 manage.py shell' in the directory having 'manage.py'. 
# Then run following codes:
# >>> import csv
# >>> from trips.models import NAME_OF_MODEL (e.g. Trip, Url, Trip1)
# >>> with open ('NAME_OF_CSV_FILE') as csvfile:
#         reader = csv.DictReader(csvfile)
#         for row in reader:
#             p = NAME_OF_MODEL(ATTRIBUTE_NAME=row['CORRESPONDING_COLUMN_NAME_IN_CSV'], 
#                 ...)
#             p.save()






